@model IEnumerable<TestVegaMVC.Models.Supplier>

@{
    ViewData["Title"] = "Fornecedores";
}
<div class="d-flex flex-row justify-content-between">
    <h1>Fornecedores</h1>
    <a asp-action="Create">
        <span class="material-symbols-outlined align-icon fs-1">
            add_circle
        </span>        
    </a>
</div>
<table class="table table-striped table-hover" id="myDataTable" style="width:100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.QRCode)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedBy)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @item.FormattedQRCode
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedBy)
            </td>
            <td>
                <div class="d-flex flex-column">
                    <a asp-action="Edit" asp-route-id="@item.Id">
                        <span class="material-symbols-outlined">
                            edit
                        </span>
                    </a>
                    <a asp-action="Details" asp-route-id="@item.Id">
                        <span class="material-symbols-outlined">
                            info    
                        </span>
                    </a>
                    <a asp-action="Delete" asp-route-id="@item.Id">
                        <span class="material-symbols-outlined">
                            delete
                        </span>
                    </a>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
@section scripts {
    <script>
        $(document).ready(function () {
            $("#myDataTable").DataTable({
                language: {
                    url: "//cdn.datatables.net/plug-ins/1.13.4/i18n/pt-BR.json"
                },
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Todos"]],
                scrollX: true,
                dom:"<'row'<'col-md-12'Q>>" +  
                    "<'row'<'col d-flex align-items-end'l><'col d-flex align-items-end justify-content-end'B>>" +  
                    "<'row'<'col-md-12'tr>>" +
                    "<'row'<'col-md-6'i><'col-md-6 d-flex justify-content-end'p>>",
                columnDefs: [
                    { targets: -1, orderable: false },
                    { className: "dt-nowrap", "targets": [0, 1, 2, 5, 6, 7, 8] },
                ],
                searchBuilder: {
                    columns: [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ],
                },
                buttons: [
                    {
                        extend: 'print',
                        exportOptions: {
                             columns: ':not(:nth-child(10))'
                        },
                        customize: function ( win ) {       
                            $(win.document.body).find( 'table' )
                                .addClass( 'compact' )
                                .css( 'text-weight', '100' )
                                .css( 'font-family', 'Arial, sans-serif' )
                                .css( 'font-size', '7px' )
                                .find( 'tr *' )
                                .addClass( 'color' )
                                .css( 'color', 'black' );

                            $(win.document.body)
                                .addClass( 'bg-white' )
                                .css( 'background', 'white' );
                        }
                    },
                ]
            });
        });
    </script>
}

